/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        layer_hold_switch: layer_hold_switch {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_SWITCH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };
    };

    macros {
        switch_tab: switch_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &kp GRAVE>, <&macro_press>;

            label = "SWITCH_TAB";
        };

        open_terminal: open_terminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kt LCTRL &kt LALT &kp T &kt LCTRL &kt LALT>,
                <&macro_release>;

            label = "OPEN_TERMINAL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1       &kp N2                  &kp N3                  &kp N4      &kp N5                  &tog 1                                                           &mo 3              &kp N6  &kp N7      &kp N8      &kp N9       &kp N0          &kp MINUS
&kp TAB    &kp Q        &kp W                   &kp E                   &kp R       &kp T                   &kp COMMA                                                        &kp LEFT_BRACKET   &kp Y   &kp U       &kp I       &kp O        &kp P           &kp BSLH
&kp ESC    &hm LCTRL A  &layer_hold_switch 2 S  &layer_hold_switch 4 D  &hm LALT F  &layer_hold_switch 5 G  &kp DOT        &kp LCTRL  &mo 2            &kp LGUI   &kp RCTRL  &kp RIGHT_BRACKET  &kp H   &hm RALT J  &hm RALT K  &hm RCTRL L  &hm RCTRL SEMI  &kp SQT
&kp LSHFT  &kp Z        &kp X                   &kp C                   &kp V       &kp B                                             &kp HOME         &kp MINUS                                &kp N   &kp M       &kp COMMA   &kp DOT      &kp FSLH        &kp RSHFT
&kp LCTRL  &kp GRAVE    &kp CAPS                &kp LCTRL               &kp LALT                            &kp BACKSPACE  &kp LSHFT  &switch_tab      &kp FSLH   &kp ENTER  &kp SPACE                  &kp LEFT    &kp DOWN    &kp UP       &kp RIGHT       &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1     &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                   &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T   &none                                                    &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A      &kp S     &kp D     &kp F      &kp G   &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B                        &kp HOME      &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&mo 2      &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3             &kp F7  &kp F8             &kp F9                 &kp F10           &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &kp LEFT_BRACKET  &trans  &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp MINUS         &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &kp RBKT          &trans  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp SINGLE_QUOTE  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                            &trans  &trans             &kp COMMA              &kp DOT           &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                    &trans             &trans                 &trans            &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &bt BT_CLR    &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        nav {
            bindings = <
&trans  &trans     &trans  &trans  &trans    &trans  &trans                                                   &trans     &trans  &trans    &trans    &trans     &trans   &trans
&trans  &trans     &trans  &trans  &trans    &trans  &trans                                                   &trans     &trans  &mkp MB4  &kp UP    &mkp MB5   &kp DEL  &trans
&trans  &kp LCTRL  &trans  &trans  &kp LALT  &trans  &trans         &trans     &trans      &trans  &trans     &trans     &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans
&trans  &trans     &trans  &trans  &trans    &trans                            &trans      &trans                        &trans  &trans    &trans    &trans     &trans   &trans
&trans  &trans     &trans  &trans  &trans            &kp BACKSPACE  &kp LSHFT  &trans      &trans  &kp ENTER  &kp SPACE          &trans    &trans    &trans     &trans   &trans
            >;
        };

        system {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans          &trans                &trans        &trans    &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &open_terminal  &kp C_BRIGHTNESS_INC  &kp C_VOL_UP  &kp LGUI  &kp PRINTSCREEN  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans          &kp C_BRIGHTNESS_DEC  &kp C_VOL_DN  &trans    &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans          &trans                &trans        &trans    &trans           &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                  &trans                &trans        &trans    &trans           &trans
            >;
        };
    };
};
